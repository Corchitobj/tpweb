// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tpweb.Data;

#nullable disable

namespace tpweb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Asistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscuelaId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EscuelaId = 1,
                            Nombre = "Primer año"
                        },
                        new
                        {
                            Id = 2,
                            EscuelaId = 1,
                            Nombre = "Segundo año"
                        },
                        new
                        {
                            Id = 3,
                            EscuelaId = 1,
                            Nombre = "Tercer año"
                        },
                        new
                        {
                            Id = 4,
                            EscuelaId = 1,
                            Nombre = "Cuarto año"
                        },
                        new
                        {
                            Id = 5,
                            EscuelaId = 1,
                            Nombre = "Quinto año"
                        });
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Escuela", b =>
                {
                    b.Property<int>("IdEscuela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEscuela"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEscuela");

                    b.ToTable("Escuelas");

                    b.HasData(
                        new
                        {
                            IdEscuela = 1,
                            Nombre = "Inmaculada Concepcion"
                        });
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Materia", b =>
                {
                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateria"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMateria");

                    b.HasIndex("CursoId");

                    b.HasIndex("DocenteId");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.Alumno", b =>
                {
                    b.Property<int>("IdAlumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlumno"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAlumno");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.AsistenciaAlumno", b =>
                {
                    b.Property<int>("AsistenciaId")
                        .HasColumnType("int");

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.Property<bool>("Presente")
                        .HasColumnType("bit");

                    b.HasKey("AsistenciaId", "AlumnoId");

                    b.HasIndex("AlumnoId");

                    b.ToTable("AsistenciasAlumnos");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.MateriaAlumno", b =>
                {
                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.HasKey("MateriaId", "AlumnoId");

                    b.HasIndex("AlumnoId");

                    b.ToTable("MateriasAlumnos");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            IdRol = 1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            IdRol = 2,
                            Nombre = "Docente"
                        },
                        new
                        {
                            IdRol = 3,
                            Nombre = "Preceptor"
                        });
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.TareaAlumno", b =>
                {
                    b.Property<int>("TareaId")
                        .HasColumnType("int");

                    b.Property<int>("AlumnoId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoEntrega")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Nota")
                        .HasColumnType("float");

                    b.Property<string>("Respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TareaId", "AlumnoId");

                    b.HasIndex("AlumnoId");

                    b.ToTable("TareasAlumnos");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Asistencia", b =>
                {
                    b.HasOne("tpweb.Modelos.Clase_Escuela.Materia", "Materia")
                        .WithMany("Asistencias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Curso", b =>
                {
                    b.HasOne("tpweb.Modelos.Clase_Escuela.Escuela", "Escuela")
                        .WithMany("Cursos")
                        .HasForeignKey("EscuelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escuela");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Materia", b =>
                {
                    b.HasOne("tpweb.Modelos.Clase_Escuela.Curso", "Curso")
                        .WithMany("Materias")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tpweb.Modelos.Clase_Persona.Usuario", "Docente")
                        .WithMany("MateriasDictadas")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Tarea", b =>
                {
                    b.HasOne("tpweb.Modelos.Clase_Escuela.Materia", "Materia")
                        .WithMany("Tareas")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.AsistenciaAlumno", b =>
                {
                    b.HasOne("tpweb.Modelos.Clase_Persona.Alumno", "Alumno")
                        .WithMany("AsistenciasAlumnos")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tpweb.Modelos.Clase_Escuela.Asistencia", "Asistencia")
                        .WithMany("AsistenciasAlumnos")
                        .HasForeignKey("AsistenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Asistencia");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.MateriaAlumno", b =>
                {
                    b.HasOne("tpweb.Modelos.Clase_Persona.Alumno", "Alumno")
                        .WithMany("MateriaAlumnos")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tpweb.Modelos.Clase_Escuela.Materia", "Materia")
                        .WithMany("MateriaAlumnos")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.TareaAlumno", b =>
                {
                    b.HasOne("tpweb.Modelos.Clase_Persona.Alumno", "Alumno")
                        .WithMany("TareasAlumnos")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tpweb.Modelos.Clase_Escuela.Tarea", "Tarea")
                        .WithMany("TareasAlumnos")
                        .HasForeignKey("TareaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.Usuario", b =>
                {
                    b.HasOne("tpweb.Modelos.Clase_Persona.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Asistencia", b =>
                {
                    b.Navigation("AsistenciasAlumnos");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Curso", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Escuela", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Materia", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("MateriaAlumnos");

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Escuela.Tarea", b =>
                {
                    b.Navigation("TareasAlumnos");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.Alumno", b =>
                {
                    b.Navigation("AsistenciasAlumnos");

                    b.Navigation("MateriaAlumnos");

                    b.Navigation("TareasAlumnos");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("tpweb.Modelos.Clase_Persona.Usuario", b =>
                {
                    b.Navigation("MateriasDictadas");
                });
#pragma warning restore 612, 618
        }
    }
}
